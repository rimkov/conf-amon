#!/bin/bash
###########################################################
# gen_dns
# generation de named.conf et des fichiers de zone pour bind
############################################################

# appel des fonctions Eole
. ParseDico
. /etc/eole/containers.conf
[ -f /etc/eole/network_containers.conf ] && . /etc/eole/network_containers.conf

## Correction bug si nom_domaine_local == local
if [ -e "$container_path_dns/etc/bind/db.local" ]
then
    rm -f "$container_path_dns/etc/bind/db.local"
fi
##
NAMEDCONF=$container_path_dns/etc/bind/named.conf

declare -i I Max nb_int
cd $container_path_dns/etc/bind
if [ "$container_path_dns" = "" ]; then
MACHINNAME=$nom_machine
else
MACHINNAME=`echo $container_path_dns|awk -F/ '{ print $(NF-1) }'`
fi
DOMAINNAME=$MACHINNAME.$nom_domaine_local
Cmd="/usr/share/eole/h2n -h $MACHINNAME -d $nom_domaine_local -s $DOMAINNAME"
Max=`expr $nombre_interfaces - 1`
I=0
while [ $I -le $Max ]
do
    Master=dns_master_eth${I}
    if [ ${!Master}  == "oui" -o "$I" == "0" ]
    then
       Network=adresse_network_eth${I}
       Netmask=adresse_netmask_eth${I}
       Cmd=$Cmd" -n ${!Network}:${!Netmask} "
    fi
    I=$I+1
done

if [ ! "$container_path_dns" = "" ]; then
    #mode conteneur
    Cmd=$Cmd" -n $adresse_ip_br0:$adresse_netmask_br0 "
fi
Cmd=$Cmd" -M -v 8 -y -b $NAMEDCONF"

#AmonEcole 2.2
#if [ ! $adresse_network_dmz = "" ]
#then
#        Cmd=$Cmd" -n ${adresse_network_dmz}:${adresse_netmask_dmz} "
#fi

# routes statiques
if [ $activer_route = "oui" ];then
routes=`echo $route_adresse | wc -w`
if [ $routes -gt 0 ];then
adresse=($route_adresse)
netmask=($route_netmask)
for index in `eval echo "{0..$((routes-1))}"`; do
    Cmd=$Cmd" -n ${adresse[$index]}:${netmask[$index]} "
done
fi
fi

$Cmd
cp -f "$container_path_dns/etc/bind/db.root" "$container_path_dns/etc/bind/db.cache"
exit 0
