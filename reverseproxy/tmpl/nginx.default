client_max_body_size 4M;
client_body_buffer_size 128k;
%set %%len_dom=0
%if %%revprox_activate_http == 'oui'
%for %%location_iter in %%revprox_domainname
%set %%len_dom=%%max(%%len_dom,%%len(%%location_iter.value)+4)
%end for
%end if
%if %%len_dom < 24
server_names_hash_bucket_size 32;
%elif %%len_dom < 56
server_names_hash_bucket_size 64;
%else
server_names_hash_bucket_size 128;
%end if
proxy_buffer_size   16k;
proxy_buffers   6 32k;
proxy_busy_buffers_size   32k;

# wpad
server {
    listen %%adresse_ip_eth1:80;
    server_name wpad.%%nom_domaine_local;
    server_name wpad;
    server_name %%nom_domaine_local;
    root /var/www/;
    location /wpad.dat {
        index wpad.dat;
        default_type application/x-ns-proxy-autoconfig;
    }
}

%if %%nombre_interfaces >= "3"
server {
    listen %%adresse_ip_eth2:80;
    server_name wpad.%%nom_domaine_local;
    server_name wpad;
    server_name %%nom_domaine_local;
    root /var/www/;
    location /wpad.dat {
        index wpad.dat;
        default_type application/x-ns-proxy-autoconfig;
    }
}
%end if

%if %%revprox_activate_http == 'oui'

%set %%dom_dict={}
%for %%location_iter in %%revprox_domainname
%%dom_dict.setdefault(%%location_iter.value, []).append((%%location_iter.revprox_rep, %%location_iter.revprox_http, %%location_iter.revprox_https, %%location_iter.revprox_url))
%end for

%for %%revprox_iter in %%dom_dict.keys()
# Configuration HTTP %%revprox_iter
server {
	listen 80;
	server_name %%revprox_iter;
	access_log  /var/log/nginx/access.log;
	error_page   403 404 502 503 504  /nginx.html;
	location = /nginx.html{
	root /var/www/nginx-default;
	}
%for %%rep_iter, %%http_iter, %%https_iter, %%url_iter in %%dom_dict[%%revprox_iter]
%if %%http_iter == 'non'
%continue
%end if
%if %%rep_iter != ""
	location %%rep_iter {
%else
	location / {
%end if
%if %%http_iter == 'redirige vers https'
		if ($host = "%%revprox_iter" ) {
			rewrite     ^(.*)   https://$host$1 permanent;
			break;
		}
%elif %%http_iter == 'oui'
%if %%url_iter != ''
		proxy_pass              %%url_iter;
%else
		proxy_pass              http://%%location_iter;
%end if % if %%url_iter != ''
		proxy_set_header        Host $host;
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        Destination   $dest;
		set                     $dest  $http_destination;
%end if % if %%http_iter == 'redirige vers https'
		index  50x.html;
		root /var/www/nginx-default/;
        }
%end for
}
%end for


%for %%revprox_iter in %%dom_dict.keys()
# Configuration HTTPS %%revprox_iter
server {
	listen 443;
	ssl    on;
	ssl_certificate    %%server_cert;
	ssl_certificate_key     %%server_key;
	access_log  /var/log/nginx/revprox.revprox_http.access-ssl.log;
	server_name %%revprox_iter;
	error_page   403 404 502 503 504  /nginx.html;
	location = /nginx.html{
		root /var/www/nginx-default;
	}
%for %%rep_iter, %%http_iter, %%https_iter, %%url_iter in %%dom_dict[%%revprox_iter]
%if not %%http_iter == 'redirige vers https' and %%https_iter == 'non'
%continue
%end if
%if %%rep_iter != ""
	location %%rep_iter {
%else
	location / {
%end if
%if %%url_iter != ''
		proxy_pass              %%url_iter;
%else
		proxy_pass              http://%%location_iter;
%end if % if %%url_iter != ''
		proxy_set_header        Host $host;
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        Destination   $dest;
		set                     $dest  $http_destination;
		index  50x.html;
		root /var/www/nginx-default/;
	}
%end for % for %%rep_iter, %%http_iter, %%https_iter, %%url_iter in %%dom_dict[%%revprox_iter]
}
%end for % for %%revprox_iter in %%dom_dict.keys()
%end if % if %%revprox_activate_http == 'oui'

%if %%revprox_sso != '' and %%activer_sso == 'distant'
# Redirection SSO
server {
        listen 8443;
        ssl    on;
        ssl_certificate    %%server_cert;
        ssl_certificate_key     %%server_key;
        access_log  /var/log/nginx/localhost.access-sso.log;
        error_page   403 404 502 503 504  /nginx.html;
        location = /nginx.html{
            root /var/www/nginx-default;
        }
        location / {
                proxy_pass              https://%%revprox_sso:8443/;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if % if %%revprox_sso != '' and %%activer_sso == 'distant'

%if %%revprox_poshadmin != ''
# POSH admin
server {
        listen 7070;
        ssl    on;
        ssl_certificate    %%server_cert;
        ssl_certificate_key     %%server_key;
        access_log  /var/log/nginx/localhost.access-poshadmin.log;
	    error_page   403 404 502 503 504  /nginx.html;
        location = /nginx.html{
            root /var/www/nginx-default;
        }
        location / {
                proxy_pass              https://%%revprox_poshadmin:7070/;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if
## Redirection de l'ead d'un scribe sur le port 4203
%if %%revprox_ead and %%revprox_ead_port
server {
        listen %%revprox_ead_port;
        ssl    on;
        ssl_certificate    %%server_cert;
        ssl_certificate_key     %%server_key;
        access_log  /var/log/nginx/localhost.access-eadscribe.log;
	    error_page   403 404 502 503 504  /nginx.html;
        location = /nginx.html{
            root /var/www/nginx-default;
        }
        location / {
                proxy_pass              https://%%revprox_ead:4200/;
                proxy_set_header        Host $host:$server_port;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if
