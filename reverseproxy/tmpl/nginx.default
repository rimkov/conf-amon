client_max_body_size 4M;
client_body_buffer_size 128k;
%set %%len_dom=0
%for %%location_iter in %%revprox_domainname
%set %%len_dom=%%max(%%len_dom,%%len(%%location_iter.value)+4)
%end for
%if %%len_dom < 24
server_names_hash_bucket_size 32;
%elif %%len_dom < 56
server_names_hash_bucket_size 64;
%else
server_names_hash_bucket_size 128;
%end if
proxy_buffer_size   16k;
proxy_buffers   6 32k;
proxy_busy_buffers_size   32k;

%if not %%is_empty(%%revprox_default)
server {
    listen 80;
    server_name _ default;
    access_log  /var/log/nginx/access.log;
    rewrite ^(.*) http://%%revprox_default$1;
    break;
}
server {
    listen 443;
    ssl    on;
    ssl_certificate    %%server_cert;
    ssl_certificate_key     %%server_key;
    access_log  /var/log/nginx/revprox.revprox_http.access-ssl.log;
    server_name _ default;
    rewrite ^(.*) http://%%revprox_default$1;
    break;
}
%end if

%if %%is_defined('container_ip_proxy')

# erreur pour le proxy
server {
%if %%mode_conteneur_actif != 'non'
    #Ecoute sur le port de dansguardian en mode conteneur
    listen 0.0.0.0:3128;
%end if
    listen 0.0.0.0:82 default ssl;
    root /var/www/;
    ssl_certificate %%server_cert;
    ssl_certificate_key %%server_key;
    rewrite  ^(.*)$  /index.html  break;
}
# wpad
%def gen_geo_zone(%%nb_zone)
#FIXME :alias et vlan
        %%getVar('adresse_network_eth' + %%nb_zone)/%%calc_classe(%%getVar('adresse_netmask_eth' + %%nb_zone)) eth%%nb_zone;
%end def
geo $zone_name {
    default all;
#gen_geo_zone("0")
%if %%nombre_interfaces >= "2"
%%gen_geo_zone("1")
%end if
%if %%nombre_interfaces >= "3"
%%gen_geo_zone("2")
%end if
%if %%nombre_interfaces >= "4"
%%gen_geo_zone("3")
%end if
%if %%nombre_interfaces >= "5"
%%gen_geo_zone("4")
%end if
}
%def gen_wpad(%%nb_zone)
    location /wpad.eth%%{nb_zone} {
        default_type application/x-ns-proxy-autoconfig;
        allow %%getVar('adresse_network_eth' + %%nb_zone)/%%calc_classe(%%getVar('adresse_netmask_eth' + %%nb_zone));
    %if %%getVar('alias_eth' + %%nb_zone) == "oui"
        %for %%alias_addr_eth in %%getVar('alias_ip_eth' + %%nb_zone)
            %set %%alias_net = 'alias_network_eth' + %%nb_zone
            %set %%alias_mask = 'alias_netmask_eth' + %%nb_zone
        allow %%getattr(%%alias_addr_eth, %%alias_net)/%%getattr(%%alias_addr_eth, %%alias_mask);
        %end for
    %end if
    %if %%getVar('vlan_eth' + %%nb_zone) == "oui"
        %for %%vlan_id in %%getVar('id_vlan_eth' + %%nb_zone)
        allow %%vlan_id.adresse_network_vlan_eth1/%%vlan_id.adresse_netmask_vlan_eth1;
        %end for
    %end if
        deny all;
    }
%end def
server {
    listen 0.0.0.0:81;
    server_name wpad.%%nom_domaine_local;
    server_name wpad;
    root /var/www/;
    #for IE
    index wpad.$zone_name;
    #for firefox
    rewrite  ^/wpad.dat  /wpad.$zone_name  break;
    #deny all, so wpad.all too
    location / {
        deny all;
    }
#gen_wpad("0")
%if %%nombre_interfaces >= "2"
%%gen_wpad("1")
%end if
%if %%nombre_interfaces >= "3"
%%gen_wpad("2")
%end if
%if %%nombre_interfaces >= "4"
%%gen_wpad("3")
%end if
%if %%nombre_interfaces >= "5"
%%gen_wpad("4")
%end if
}

%end if % if %%is_defined('container_ip_proxy')

%set %%dom_dict={}
%if %%revprox_activate_http == 'oui'
 %for %%location_iter in %%revprox_domainname
  %%dom_dict.setdefault(%%location_iter.value, []).append((%%location_iter.revprox_rep, %%location_iter.revprox_http, %%location_iter.revprox_https, %%location_iter.revprox_url))
 %end for
%end if % if %%revprox_activate_http == 'oui'

%if %%is_defined('web_url') and %%revprox_auto_config_local_web == 'oui'
 %%dom_dict.setdefault(%%web_url, []).append(('/', 'redirige vers https', 'oui', 'https://'+%%container_ip_web))
%end if

%set %%rewrite_dict={}
%if %%activer_revprox_rewrite == 'oui'
 %for %%rewrite_domain in %%revprox_rewrite_domaine
  %%rewrite_dict.setdefault(%%rewrite_domain.value, []).append((%%rewrite_domain.revprox_rewrite_location, %%rewrite_domain.revprox_rewrite_proto, %%rewrite_domain.revprox_rewrite_regex, %%rewrite_domain.revprox_rewrite_replacement))
 %end for
%end if

%for %%revprox_iter in %%dom_dict.keys()
# Configuration HTTP %%revprox_iter
server {
    listen 80;
    server_name %%revprox_iter;
    access_log  /var/log/nginx/access.log;
    error_page   403 404 502 503 504  /nginx.html;
    location = /nginx.html{
        root /var/www/nginx-default;
    }
 %for %%rep_iter, %%http_iter, %%https_iter, %%url_iter in %%dom_dict[%%revprox_iter]
  %if %%http_iter == 'non'
   %continue
  %end if
  %if %%rep_iter != ""
    %set %%rep_location = %%rep_iter
  %else
    %set %%rep_location = '/'
  %end if
    location %%rep_location {
  %if %%http_iter == 'redirige vers https'
        if ($host = "%%revprox_iter" ) {
            rewrite     ^(.*)   https://$host$1 permanent;
            break;
        }
  %elif %%http_iter == 'oui'
   %if %%url_iter != ''
        proxy_pass              %%url_iter;
   %else
        proxy_pass              http://%%location_iter;
   %end if % if %%url_iter != ''
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Destination   $dest;
        set                     $dest  $http_destination;
        #2131
   %for %%rewrite_location, %%rewrite_proto, %%rewrite_regexp, %%rewrite_replacement in %%rewrite_dict.get(%%revprox_iter, [])
    %if %%rewrite_proto != "https" and %%rewrite_location == %%rep_location
        rewrite %%rewrite_regexp %%rewrite_replacement break;
    %end if
   %end for
  %end if % if %%http_iter == 'redirige vers https'
        index  50x.html;
        root /var/www/nginx-default/;
        }
 %end for
}
%end for


%for %%revprox_iter in %%dom_dict.keys()
# Configuration HTTPS %%revprox_iter
server {
    listen 443;
    ssl    on;
    ssl_certificate    %%server_cert;
    ssl_certificate_key     %%server_key;
    access_log  /var/log/nginx/revprox.revprox_http.access-ssl.log;
    server_name %%revprox_iter;
    error_page   403 404 502 503 504  /nginx.html;
    location = /nginx.html{
        root /var/www/nginx-default;
    }
%for %%rep_iter, %%http_iter, %%https_iter, %%url_iter in %%dom_dict[%%revprox_iter]
%if not %%http_iter == 'redirige vers https' and %%https_iter == 'non'
%continue
%end if
%if %%rep_iter != ""
    %set %%rep_location = %%rep_iter
%else
    %set %%rep_location = '/'
%end if
    location %%rep_location {
%if %%url_iter != ''
        proxy_pass              %%url_iter;
%else
        proxy_pass              http://%%location_iter;
%end if % if %%url_iter != ''
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Destination   $dest;
        set                     $dest  $http_destination;
        #2131
  %for %%rewrite_location, %%rewrite_proto, %%rewrite_regexp, %%rewrite_replacement in %%rewrite_dict.get(%%revprox_iter, [])
   %if %%rewrite_proto != "http" and %%rewrite_location == %%rep_location
        rewrite %%rewrite_regexp %%rewrite_replacement break;
   %end if
  %end for
        index  50x.html;
        root /var/www/nginx-default/;
    }
%end for % for %%rep_iter, %%http_iter, %%https_iter, %%url_iter in %%dom_dict[%%revprox_iter]
}
%end for % for %%revprox_iter in %%dom_dict.keys()

%if %%revprox_sso != '' and %%activer_sso == 'distant'
# Redirection SSO
server {
        listen 8443;
        ssl    on;
        ssl_certificate    %%server_cert;
        ssl_certificate_key     %%server_key;
        access_log  /var/log/nginx/localhost.access-sso.log;
        error_page   403 404 502 503 504  /nginx.html;
        location = /nginx.html{
            root /var/www/nginx-default;
        }
        location / {
                proxy_pass              https://%%revprox_sso:8443/;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if % if %%revprox_sso != '' and %%activer_sso == 'distant'

%if %%revprox_poshadmin != ''
# POSH admin
server {
        listen 7070;
        ssl    on;
        ssl_certificate    %%server_cert;
        ssl_certificate_key     %%server_key;
        access_log  /var/log/nginx/localhost.access-poshadmin.log;
        error_page   403 404 502 503 504  /nginx.html;
        location = /nginx.html{
            root /var/www/nginx-default;
        }
        location / {
                proxy_pass              https://%%revprox_poshadmin:7070/;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if
%if %%revprox_ead and %%revprox_ead_port
## Redirection de l'ead d'un scribe sur le port 4203
server {
        listen %%revprox_ead_port;
        ssl    on;
        ssl_certificate    %%server_cert;
        ssl_certificate_key     %%server_key;
        access_log  /var/log/nginx/localhost.access-eadscribe.log;
        error_page   403 404 502 503 504  /nginx.html;
        location = /nginx.html{
            root /var/www/nginx-default;
        }
        location / {
                proxy_pass              https://%%revprox_ead:4200/;
                proxy_set_header        Host $host:$server_port;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if
