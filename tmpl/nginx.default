client_max_body_size 4M;
client_body_buffer_size 128k;
%set %%lendom=0
%for %%location in %%revprox_domainname
%set %%lendom=%%max(%%lendom,%%len(%%location.value))
%end for
%if %%lendom < 24
server_names_hash_bucket_size 32;
%elif %%lendom < 56
server_names_hash_bucket_size 64;
%else
server_names_hash_bucket_size 128;
%end if

%set %%domdict={}
%for %%location in %%revprox_domainname
%%domdict.setdefault(%%location.value, []).append((%%location.revprox_rep, %%location.revprox_http, %%location.revprox_https, %%location.revprox_url))
%end for

%for %%revprox in %%domdict.keys()
# Configuration HTTP %%revprox
server {
	listen 80;
	server_name %%revprox;
	access_log  /var/log/nginx/access.log;
	error_page   403 404 502 503 504  /nginx.html;
	location = /nginx.html{
	root /var/www/nginx-default;
	}
%for %%rep, %%http, %%https, %%url in %%domdict[%%revprox]
%if %%http == 'non'
%continue
%end if
%if %%rep != ""
	location %%rep {
%else
	location / {
%end if
%if %%http == 'redirige vers https'
		if ($host = "%%revprox" ) {
			rewrite     ^(.*)   https://$host$1 permanent;
			break;
		}
%elif %%http == 'oui'
%if %%url != ''
		proxy_pass              %%url;
%else
		proxy_pass              http://%%location;
%end if % if %%url != ''
		proxy_set_header        Host $host;
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        Destination   $dest;
		set                     $dest  $http_destination;
%end if % if %%http == 'redirige vers https'
		index  50x.html;
		root /var/www/nginx-default/;
        }
%end for % for %%rep, %%http, %%https, %%url in %%domdict[%%revprox]
}
%end for % for %%revprox in %%domdict.keys()


%for %%revprox in %%domdict.keys()
# Configuration HTTPS %%revprox
server {
	listen 443;
	ssl    on;
	ssl_certificate    %%server_cert;
	ssl_certificate_key     /etc/ssl/certs/eole.key;
	access_log  /var/log/nginx/revprox.revprox_http.access-ssl.log;
	server_name %%revprox;
	error_page   403 404 502 503 504  /nginx.html;
	location = /nginx.html{
		root /var/www/nginx-default;
	}
%for %%rep, %%http, %%https, %%url in %%domdict[%%revprox]
%if not %%http == 'redirige vers https' and %%https == 'non'
%continue
%end if
%if %%rep != ""
	location %%rep {
%else
	location / {
%end if
%if %%url != ''
		proxy_pass              %%url;
%else
		proxy_pass              http://%%location;
%end if % if %%url != ''
		proxy_set_header        Host $host;
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        Destination   $dest;
		set                     $dest  $http_destination;
		index  50x.html;
		root /var/www/nginx-default/;
	}
%end for % for %%rep, %%http, %%https, %%url in %%domdict[%%revprox]
}
%end for % for %%revprox in %%domdict.keys()

%set %%sso_local=False
%if %%sso == 'oui'
%if %%adresse_ip_eth0 == %%adresse_ip_sso
%set %%sso_local=True
%end if
%if %%is_defined('adresse_ip_eth1') and %%adresse_ip_eth1 == %%adresse_ip_sso
%set %%sso_local=True
%end if
%if %%is_defined('adresse_ip_eth2') and %%adresse_ip_eth2 == %%adresse_ip_sso
%set %%sso_local=True
%end if
%if %%is_defined('adresse_ip_eth3') and %%adresse_ip_eth3 == %%adresse_ip_sso
%set %%sso_local=True
%end if
%if %%is_defined('adresse_ip_eth4') and %%adresse_ip_eth4 == %%adresse_ip_sso
%set %%sso_local=True
%end if
%if %%is_defined('adresse_ip_dmz') and %%adresse_ip_dmz == %%adresse_ip_sso
%set %%sso_local=True
%end if
%end if % if %%sso == 'oui'
%if %%revprox_sso != '' and %%sso_local == False
# Redirection SSO
server {
        listen 8443;
        ssl    on;
        ssl_certificate    %%server_cert;
        ssl_certificate_key     /etc/ssl/certs/eole.key;
        access_log  /var/log/nginx/localhost.access-sso.log;
        location / {
                proxy_pass              https://%%revprox_sso:8443/;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if % if %%revprox_sso != '' and %%sso_local == False

%if %%revprox_poshadmin != ''
# POSH
server {
        listen 7070;
        access_log  /var/log/nginx/localhost.access-poshadmin.log;
	    error_page   403 404 502 503 504  /nginx.html;
        location = /nginx.html{
            root /var/www/nginx-default;
        }
        location / {
                proxy_pass              http://%%revprox_poshadmin:7070/;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if
## Redirection de l'ead d'un scribe sur le port 4203
%if %%is_defined('revprox_ead') and %%is_defined('revprox_ead_port') and %%revprox_ead and %%revprox_ead_port
server {
        listen %%revprox_ead_port;
        ssl    on;
        ssl_certificate    %%server_cert;
        ssl_certificate_key     /etc/ssl/certs/eole.key;
        access_log  /var/log/nginx/localhost.access-eadscribe.log;
	    error_page   403 404 502 503 504  /nginx.html;
        location = /nginx.html{
            root /var/www/nginx-default;
        }
        location / {
                proxy_pass              https://%%revprox_ead:4200/;
                proxy_set_header        Host $host:$server_port;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Destination   $dest;
                set                     $dest  $http_destination;
        }
}
%end if

